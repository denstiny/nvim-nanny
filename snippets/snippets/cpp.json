{
  "date": {
    "prefix": "date",
    "body": ["${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}  ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}"],
    "description": "ISO date time stamp"
  },
  "//":{
      "prefix": "/**/",
      "body" : ["/* ${1:annotation} */"],
      "description": "annotation"
  },
  "/*":{
      "prefix": "/**/",
      "body" : ["/*","  ${1:annotation}","*/"],
      "description": "annotation"
  },
  "dv":{
      "prefix":"--",
      "body":["/* ------------ ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ----------- */",""]
  },
  "test":{
      "prefix":"test",
      "body":[
          "std::vector<${1:type}> array;",
          "${1:type} n;",
          "",
          "while (std::cin >> n) { ",
          "    if(std::cin.get() == '\\n') ",
          "        break; ",
          "",
          "    array.emplace_back(n); ",
          "}",
          "",
          "for (auto i : array) { ",
          "    std::cout << i << \" \"; ",
          "}",""]
  },
  "log":{
      "prefix":"log",
      "body":["std::cerr << \"log: \" << ${1:log} << endl;"]
  },
  "fun":{
    "prefix": "fun",
    "body": ["${1:type} ${2:fun_name} (${3:args}) {","  ${4}","}"]
  },
  "if ()":{
    "prefix":"if",
    "body":["if (${1:cond}) {","  ${2}","}"]
  },
  "for":{
    "prefix":"for",
    "body":["for (${1:init_statement}; ${2:condition};${3:inc-expression}) {","  ${4}","}"]
  },
  "for_range":{
    "prefix":"for",
    "body":["for (${1:range-declaration }: ${2:range-expression}) {","  ${3}","}"]
  },
  "while":{
    "prefix":"while",
    "body":["while (${1:condition}) {","  ${2}","}"]
  }

}
