# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet ^main "int main(int argc,char *argv[]) " r
#include <iostream>
using namespace std;
$1
int main(int argc,char **argv) {
	$2
	return 0;
}
endsnippet
snippet printf "printf(\"...\",...);" b
printf("${1:parameter}",${2:parameter1});

endsnippet

snippet ^class "class code" br
class ${1:Perjet} {$2};
endsnippet

snippet cout "cout << $1 << endl;" b
cout << $1 << endl;
endsnippet
snippet int main "int main(int argc,char *argv[])" 
int main(int argc, char **argv) {
	$1
	return 0;
}
endsnippet

snippet // "注释" b
/*
	$1 
*/
endsnippet
snippet fun "文档" b
fun: ${1:fun}
	do: ${2:do}
endsnippet
