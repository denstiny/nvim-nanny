gd  跳转到定义处
gr 显示变量的调用
gi 转到实现处
<leader>f 变量重命名

<leader>g 跳转上诊断代码报错 
<leader>d 跳转下诊断代码报错 

<leader><leader> K 快速跳转
<leader><leader> w 快速跳转单词头
<leader><leader> a 搜索单词并跳转
<leader><leader> s 快速跳转跳转搜索单词
<leader> y/p 复制/粘贴到系统剪切板
. 快速编译
er 打开文件目录树
tt 启动函数列表
L 显示历史修改
ei 快速在当前window打开文件
{
	J K 快速切换
}
<leader>m 打开数字栏

'g 新建悬浮终端
'a 上一个 悬浮窗
'd 下一个 悬浮窗
's 隐藏/ 终端 打开 悬浮窗
<leader>w ^W
<leader>z 关闭悬浮窗口
命令 FloatermNew 新建悬浮窗口

<leader>f 快速重名函数
<leader>e/r 切换文件

分屏启动Vim
vim -On file1 file2 ...使用大写的O参数来垂直分屏。
vim -on file1 file2 ...使用小写的o参数来水平分屏。
注释: n是数字，表示分成几个屏。

关闭分屏
Ctrl+W c//关闭当前窗口。
Ctrl+W q//关闭当前窗口，如果只剩最后一个了，则退出Vim。

分屏
ktrl+W s//上下分割当前打开的文件。
:sp filename//上下分割，并打开一个新的文件。
Ctrl+W v//左右分割当前打开的文件。
:vsp filename//左右分割，并打开一个新的文件。

移动光标
Vi中的光标键是h, j, k, l，要在各个屏间切换，只需要先按一下Ctrl+W
Ctrl+W l //把光标移到右边的屏。
Ctrl+W h //把光标移到左边的屏中。
Ctrl+W k //把光标移到上边的屏中。
Ctrl+W j //把光标移到下边的屏中。
Ctrl+W w //把光标移到下一个的屏中。.
Ctrl+l/h // 窗口宽度调整
Ctrl+j/k // 窗口高度调整

移动分屏
这个功能还是使用了Vim的光标键，只不过都是大写。当然了，如果你的分屏很乱很复杂的话，这个功能可能会出现一些非常奇怪的症状。
Ctrl+W L //向右移动。
Ctrl+W H //向左移动
Ctrl+W K //向上移动
Ctrl+W J //向下移动

屏幕尺寸
下面是改变尺寸的一些操作，主要是高度，对于宽度你可以使用Ctrl+W <或是>，但这可能需要最新的版本才支持。
Ctrl+W =  //让所有的屏都有一样的高度。
Ctrl+W +  //增加高度。
Ctrl+W -  //减少高度。
<leader> z // 临时最大化当前窗口

ViM终端调教 
ALT+ =：切换下面的终端。
ALT+ SHIFT+ h：移至左侧的窗口。
ALT+ SHIFT+ l：移至右侧的窗口。
ALT+ SHIFT+ j：移到下面的窗口。
ALT+ SHIFT+ k：移至上方的窗口。
ALT+ SHIFT+ p：移至上一个窗口。
ALT+ -：将寄存器0粘贴到端子。
ALT+ q：切换到终端普通模式。


NerdTree
（a）dd一个子节点
（m）移动当前节点
（d）删除当前节点
（r）在文件管理器中隐藏当前节点
（o）使用系统编辑器填充当前节点
（c）运行当前节点副本
（p到剪贴板
（l）到当前节点

vimspector 调试
<leader>vs // 在当前目录选择一个配置文件
<F7>       // 终端调试
<F5>       // 启动调试
<F9>       // 设置断点
<F4>       // 使用当前配置重新调试
<F3>       // 停止调试
<F6>       // 暂停调试
<F8>       // 在光标下为表达式添加函数断点
<leader>F8	//游标
F10	//越过
F11	//踏进
F12	//退出当前功能范围

FZF 文件 
# 依赖 bat // 预览文件内容
<C-f> 打开文件搜索
:FZF 打开文件搜索

Markdown 
<leader><F7> 预览当前文件
<leader><F8> 结束预览
<C-p> 重新预览
:CocCommand picgo.uploadImageFromClipboard<cr>  粘贴剪切板图片
:CocCommand picgo.uploadImageFromInputBox<cr>       使用文件夹图片,输入地址即可
在光标处使用GenTocGFM 可以为当前文档生成GFM风格目录
在光标处使用GenTocRedcarpet可以为当前文档生成电子书风格目录

添加作者信息

添加标题

:AddHeader   添加简短的作者信息或更新（如果存在）
:AddMinHeader  添加作者信息的精简版


添加许可证

:AddMITLicense  添加MIT许可证
:AddApacheLicense  添加Apache许可证
:AddGNULicense  添加了GNU GP许可证v3
:AddAGPLicense  添加了GNU Affero GP许可证v3
:AddLGPLLicense  增加了GNU Lesser GP许可证
:AddMPLLicense  添加Mozilla公共许可证
:AddWTFPLLicense 添加WTFPL许可证
:AddZlibLicense  添加zlib许可证

代码块选择运行
命令
:SnipRun  运行
:<,'>SnipRun 运行
:SnipReset 停止运行
:SnipReplMemoryClean 停止运行


对象文本
a ( b ( cccccccc ) d ) ( e ( ffffff ) g ) ( h ( iiiiiiii ) j ) k
  │││ ││└ 2Il) ┘││││││││││ ││└ I) ┘││││││││││ ││└ 2In) ┘│││││││
  │││ │└─ 2il) ─┘│││││││││ │└─ i) ─┘│││││││││ │└─ 2in) ─┘││││││
  │││ ├── 2al) ──┘││││││││ ├── a) ──┘││││││││ ├── 2an) ──┘│││││
  │││ └── 2Al) ───┘│││││││ └── A) ───┘│││││││ └── 2An) ───┘││││
  ││└───── Il) ────┘│││││└─── 2I) ────┘│││││└───── In) ────┘│││
  │└────── il) ─────┘│││└──── 2i) ─────┘│││└────── in) ─────┘││
  ├─────── al) ──────┘│├───── 2a) ──────┘│├─────── an) ──────┘│
  └─────── Al) ───────┘└───── 2A) ───────┘└─────── An) ───────┘
ci('')  替换对象 不包括区别符号
ca('')  替换对象 包括区别符号
vi('')  选中文本 不包括区别符号
va('')  选中文本 包括区别符号

高粱当前范围

Limelight 开启
Limelight! 关闭


构建工具
pace>r 运行
<space>d 编译

tasks 配置文件参数
$VIM_FILEPATH  - 当前 buffer 的文件名全路径
$VIM_FILENAME  - 当前 buffer 的文件名（没有前面的路径）
$VIM_FILEDIR   - 当前 buffer 的文件所在路径
$VIM_FILEEXT   - 当前 buffer 的扩展名
$VIM_FILENOEXT - 当前 buffer 的主文件名（没有前面路径和后面扩展名）
$VIM_PATHNOEXT - 带路径的主文件名（$VIM_FILEPATH 去掉扩展名）
$VIM_CWD       - 当前 Vim 目录
$VIM_RELDIR    - 相对于当前路径的文件名
$VIM_RELNAME   - 相对于当前路径的文件路径
$VIM_ROOT      - 当前 buffer 的项目根目录
$VIM_CWORD     - 光标下的单词
$VIM_CFILE     - 光标下的文件名
$VIM_GUI       - 是否在 GUI 下面运行？
$VIM_VERSION   - Vim 版本号
$VIM_COLUMNS   - 当前屏幕宽度
$VIM_LINES     - 当前屏幕高度
$VIM_SVRNAME   - v:servername 的值
